
<pipe xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://whampipe.wh.tripadvisor.com/xsds/0.02/" xsi:schemaLocation="https://whampipe.wh.tripadvisor.com/xsds/0.02/ https://whampipe.wh.tripadvisor.com/xsds/0.02/whampipe-0.02.xsd">
    <declaration>
        <name>insights_platform_hotels_media_impact</name>
        <group>ta-analytics-dev</group>
        <description>pipeline for Hotels Insights Platform Media Impact</description>
        <success-emails>xhou@tripadvisor.com,blackhole@tripadvisor.com</success-emails>
        <failure-emails>xhou@tripadvisor.com,blackhole@tripadvisor.com</failure-emails>
        <tags>corex</tags>
        <schedule-display>daily</schedule-display>
    </declaration>
    <connection>
        <snowflake id="snowflake" database="{{snow_database}}"  role="{{snowflake_role}}" credential="ta-snowflake"/>
    </connection>
    <variables>
        <variable id="snow_database" description="target database to write to on snowflake">
            <production>display_ads</production>
            <private>user_scratch</private>
        </variable>
        <variable id="pipeline_schema_sf" description="target schema to write to on snowflake">
            <production>insights_platform_hotels</production>
            <private>x_{{USER}}</private>
        </variable>
        <variable id="hive_pipeline_schema" description="target schema to write to on hive">
            <production>analytics</production>
            <private>x_{{USER}}</private>
        </variable>
        <variable id="snowflake_role" description="the role to use on snowflake">
            <production>analytics_role</production>
            <private>analytics_role</private>
        </variable>

        <date-variable id="start_dt_m1" from="EXECUTION" add="-P1D" format="yyyy-MM-dd" description="1_day_prior"/>
        <date-variable id="start_dt_m30" from="EXECUTION" add="-P30D" format="yyyy-MM-dd" description="30_days_prior"/>
        <date-variable id="start_dt_m90" from="EXECUTION" add="-P90D" format="yyyy-MM-dd" description="90_days_prior"/>
        <date-variable id="start_dt_m120" from="EXECUTION" add="-P120D" format="yyyy-MM-dd" description="120_days_prior"/>


    </variables>

    <flow>


        <snow-sql id="hotel_advertiser_location_mapping" connection-ref="snowflake"
                  path-to-sql-file="hotel_advertiser_location_mapping.sql"
                  path-to-setup-ddl="hotel_advertiser_location_mapping.ddl">
            <on-success>
                <create-stamp connection-ref="snowflake" namespace="{{pipeline_schema_sf}}" name="hotel_advertiser_location_mapping" format="ds"/>
            </on-success>
        </snow-sql>


        <snow-sql id="user_hotel_advertiser_interactions_daily" connection-ref="snowflake"
                  path-to-sql-file="user_hotel_advertiser_interactions_daily.sql"
                  path-to-setup-ddl="user_hotel_advertiser_interactions_daily.ddl">
            <requires>
                <stamp connection-ref="snowflake" instance="display_ads" namespace="sales" name="user_advertiser_interactions_daily" format="ds"/>
                <task ref="hotel_advertiser_location_mapping"/>
            </requires>
            <on-success>
                <create-stamp connection-ref="snowflake" namespace="{{pipeline_schema_sf}}" name="user_hotel_advertiser_interactions_daily" format="ds"/>
            </on-success>
        </snow-sql>

        <snow-sql id="user_hotel_advertiser_impressions_daily" connection-ref="snowflake"
                  path-to-sql-file="user_hotel_advertiser_impressions_daily.sql"
                  path-to-setup-ddl="user_hotel_advertiser_impressions_daily.ddl">
            <requires>
                <!--remove for backfill-->
                <stamp connection-ref="snowflake" instance="DISPLAY_ADS" namespace="sales" name="user_order_impressions_daily_new" format="ds"/>
                <task ref="hotel_advertiser_location_mapping"/>
            </requires>
            <on-success>
                <create-stamp connection-ref="snowflake" namespace="{{pipeline_schema_sf}}" name="user_hotel_advertiser_impressions_daily" format="ds"/>
            </on-success>
        </snow-sql>

        <snow-sql id="hotel_mei_campaign_view_rate" connection-ref="snowflake"
                  path-to-sql-file="hotel_mei_campaign_view_rate.sql"
                  path-to-setup-ddl="hotel_mei_campaign_view_rate.ddl">
            <requires>
                <task ref="user_hotel_advertiser_impressions_daily"/>
                <task ref="user_hotel_advertiser_interactions_daily"/>
            </requires>
            <on-success>
                <create-stamp connection-ref="snowflake" namespace="{{pipeline_schema_sf}}" name="hotel_mei_campaign_view_rate" format="ds"/>
            </on-success>
        </snow-sql>

        <snow-sql id="hotel_mei_agg" connection-ref="snowflake"
                  path-to-sql-file="hotel_mei_agg.sql"
                  path-to-setup-ddl="hotel_mei_agg.ddl">
            <requires>
                <task ref="user_hotel_advertiser_impressions_daily"/>
                <task ref="user_hotel_advertiser_interactions_daily"/>
            </requires>
            <on-success>
                <create-stamp connection-ref="snowflake" namespace="{{pipeline_schema_sf}}" name="hotel_mei_agg" format="ds"/>
            </on-success>
        </snow-sql>

        <snow-sql id="hotel_mei_campaign_spend" connection-ref="snowflake"
                  path-to-sql-file="hotel_mei_campaign_spend.sql"
                  path-to-setup-ddl="hotel_mei_campaign_spend.ddl">
            <requires>
                <task ref="hotel_advertiser_location_mapping"/>
                <!--stamp connection-ref="snowflake" instance="DISPLAY_ADS" namespace="sales" name="mei_advertiser_spend" format="ds"/-->
            </requires>
            <on-success>
                <create-stamp connection-ref="snowflake" namespace="{{pipeline_schema_sf}}" name="hotel_mei_campaign_spend" format="ds"/>
            </on-success>
        </snow-sql>

        <snow-sql id="hotel_eco_agg" connection-ref="snowflake"
                  path-to-sql-file="hotel_eco_agg.sql"
                  path-to-setup-ddl="hotel_eco_agg.ddl">
            <requires>
                <task ref="user_hotel_advertiser_impressions_daily"/>
                <task ref="user_hotel_advertiser_interactions_daily"/>
            </requires>
            <on-success>
                <create-stamp connection-ref="snowflake" namespace="{{pipeline_schema_sf}}" name="hotel_eco_agg" format="ds"/>
            </on-success>
        </snow-sql>



        <email id="email_mei">
            <requires>
                <task ref="hotel_mei_campaign_spend"/>
                <task ref="hotel_mei_agg"/>
                <task ref="hotel_eco_agg"/>
                <task ref="hotel_mei_campaign_view_rate"/>
                <task ref="user_hotel_advertiser_impressions_daily"/>

            </requires>
            <content>
                <subject>hotel media impact</subject>
                <body>Daily run successful - {{CURRENT_DAY}}</body>
            </content>
        </email>

    </flow>
</pipe>